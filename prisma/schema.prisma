// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isActive  Boolean  @default(false)
  users   User[]
}

model User {
  id             String       @id @default(cuid())
  organizationId String?      @map("organization_id")
  Organization   Organization? @relation(fields: [organizationId], references: [id])
  name           String
  email          String       @unique
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now()) @updatedAt
  UserRole       UserRole[]
}

model Role {
  id          String         @id @default(cuid())
  name        UserRoleOption @unique
  description String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @default(now()) @updatedAt
  UserRole    UserRole[]

  @@map("roles")
}

model UserRole {
  id        String   @id @default(cuid())
  userId    String   @unique @map("user_id")
  roleId    String   @map("role_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  role      Role     @relation(fields: [roleId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("user_roles")
}

enum UserRoleOption {
  SUPERUSER
  ADMIN
  EMPLOYEE
}
